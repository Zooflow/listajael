---

---

<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" id="likes-container">
    <!-- La lista se cargará dinámicamente con JavaScript -->
    <p class="col-span-full text-center text-gray-500 italic" id="no-likes-message">
      No hay elementos en la lista todavía.
    </p>
  </div>
  
  <script>
    function loadLikes() {
      const likesContainer = document.getElementById('likes-container');
      const noLikesMessage = document.getElementById('no-likes-message');
      
      // Obtener la lista del localStorage
      const likesList = JSON.parse(localStorage.getItem('likesList') || '[]');
      
      // Mostrar mensaje si no hay elementos
      if (likesList.length === 0) {
        if (noLikesMessage) noLikesMessage.classList.remove('hidden');
        return;
      }
      
      // Ocultar mensaje si hay elementos
      if (noLikesMessage) noLikesMessage.classList.add('hidden');
      
      // Limpiar el contenedor antes de añadir los elementos
      if (likesContainer) {
        // Mantener solo el mensaje de "no hay elementos"
        while (likesContainer.children.length > 1) {
          likesContainer.removeChild(likesContainer.lastChild);
        }
        
        // Añadir cada elemento a la lista
        likesList.forEach((item, index) => {
          const card = document.createElement('div');
          card.className = 'bg-white p-6 rounded-lg shadow-md border-l-4 border-primary';
          card.innerHTML = `
            <p class="text-lg font-medium">${item}</p>
            <div class="flex justify-end">
              <!-- <button class="delete-btn text-red-500 hover:text-red-700" data-index="${index}">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                </svg>
              </button> -->
            </div>
          `;
          likesContainer.appendChild(card);
        });
        
        // Añadir listener para los botones de eliminar
        document.querySelectorAll('.delete-btn').forEach(btn => {
          btn.addEventListener('click', function() {
            const index = parseInt(this.getAttribute('data-index') || '0');
            deleteLikeItem(index);
          });
        });
      }
    }
    
    function deleteLikeItem(index) {
      // Obtener la lista actual
      const likesList = JSON.parse(localStorage.getItem('likesList') || '[]');
      
      // Eliminar el elemento
      likesList.splice(index, 1);
      
      // Guardar la lista actualizada
      localStorage.setItem('likesList', JSON.stringify(likesList));
      
      // Recargar la lista
      loadLikes();
    }
    
    // Cargar la lista cuando el DOM esté listo
    document.addEventListener('DOMContentLoaded', loadLikes);
  </script>