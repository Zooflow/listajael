---
// Componente de depuración simple
---

<div class="debug-tool p-4 bg-black/20 rounded-lg mt-8 mb-8" style="display: none;">
    <h3 class="text-white text-lg font-bold mb-2">Herramienta de Depuración</h3>
    <div class="flex space-x-2 mb-4">
      <button id="test-connection" class="bg-blue-700 text-white px-3 py-1 rounded text-sm">
        Probar Conexión
      </button>
      <button id="show-bin-data" class="bg-green-700 text-white px-3 py-1 rounded text-sm">
        Ver Datos del Bin
      </button>
      <button id="reset-likes" class="bg-red-700 text-white px-3 py-1 rounded text-sm">
        Reiniciar Likes
      </button>
    </div>
    <div id="debug-output" class="bg-black/40 p-3 rounded text-white text-sm font-mono h-40 overflow-auto">
      <!-- Aquí se mostrarán los resultados -->
    </div>
  </div>
  
  <script>
    import { testJsonBinConnection, getAllData, saveLikes } from '../jsonbin/client';
    
    // Solo mostrar en desarrollo (presionando Ctrl+Shift+D)
    document.addEventListener('keydown', (e) => {
      if (e.ctrlKey && e.shiftKey && e.key === 'D') {
        const debugTool = document.querySelector('.debug-tool');
        if (debugTool) {
          debugTool.style.display = debugTool.style.display === 'none' ? 'block' : 'none';
        }
      }
    });
    
    // Función para mostrar salida en el área de depuración
    function log(message, isError = false) {
      const output = document.getElementById('debug-output');
      if (output) {
        const entry = document.createElement('div');
        entry.className = isError ? 'text-red-400' : 'text-green-400';
        entry.textContent = `> ${message}`;
        output.appendChild(entry);
        output.scrollTop = output.scrollHeight;
      }
    }
    
    // Configurar eventos de los botones
    document.addEventListener('DOMContentLoaded', () => {
      // Botón para probar la conexión
      document.getElementById('test-connection')?.addEventListener('click', async () => {
        log('Probando conexión con JSONBin...');
        try {
          const result = await testJsonBinConnection();
          log(result ? 'Conexión exitosa!' : 'Falló la conexión', !result);
        } catch (error) {
          log(`Error: ${error.message}`, true);
        }
      });
      
      // Botón para ver los datos del bin
      document.getElementById('show-bin-data')?.addEventListener('click', async () => {
        log('Obteniendo datos del bin...');
        try {
          // Usamos la función getAllData del archivo de cliente
          const data = await getAllData();
          log(`Datos: ${JSON.stringify(data, null, 2)}`);
        } catch (error) {
          log(`Error: ${error.message}`, true);
        }
      });
      
      // Botón para reiniciar likes
      document.getElementById('reset-likes')?.addEventListener('click', async () => {
        log('Reiniciando lista de likes...');
        try {
          await saveLikes([]);
          log('Lista de likes reiniciada correctamente');
        } catch (error) {
          log(`Error: ${error.message}`, true);
        }
      });
    });
  </script>